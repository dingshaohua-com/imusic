import 'package:flutter/material.dart';

class AboutPage extends StatelessWidget {
  const AboutPage({super.key});

  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      child: Container(
        color: Colors.green, // 给 Container 设置背景色
        child: const Text(
          '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，\n'
              '这是一段非常长的文本，它会在容器的边界自动换行。如果容器的宽度不足以容纳所有文本，'
              '文本就会继续在下一行显示。如果文本非常长，这个容器应该能够滚动。',
          style: TextStyle(fontSize: 18),
        ),
      ),
    );
  }
}
